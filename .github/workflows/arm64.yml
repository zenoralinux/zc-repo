name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
    # مرحله 0: فعال‌سازی QEMU برای پشتیبانی از معماری ARM64
      - name: Enable QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

    # مرحله 1: دریافت سورس مخزن اصلی GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

    # مرحله 2: ساخت بسته‌های AUR در کانتینر ARM64 با QEMU
      - name: Build ARM64 packages in container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64
          shell: bash
          run: |
           # مرحله 1: تنظیم محیط ساخت
           pacman -Rdd --noconfirm systemd-sysvcompat || true
           pacman -Syu --noconfirm --needed 
           pacman -S --noconfirm --needed git base-devel pacman-contrib gnupg binutils

           # مرحله 3: نصب yay
           useradd -m builder
           echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
           sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
           cd /tmp/yay
           sudo -u builder makepkg -si --noconfirm --skippgpcheck
           rm -rf /tmp/yay
           sudo -u builder yay -S --noconfirm repo-add_and_sign

            # Build packages

            packages=(
              carburetor
              ascii-draw
              materialgram-bin
              gopeed-bin
            )

            for pkg in "${packages[@]}"; do
              echo "➡️ Building $pkg..."
              sudo -u builder yay -S --noconfirm --mflags="--skippgpcheck" --builddir=/tmp "$pkg" \
                || echo "⚠️ Failed to build $pkg"
            done

     # مرحله 5: آماده‌سازی و سینک مخزن
      - name: Prepare and Sync Repository
        env:
         CODEBERG_USER: zenoralinux
         CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
        run: |
         # پاکسازی توکن
         CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')
        
         # تنظیمات Git
         git config --global user.name "GitHub Actions"
         git config --global user.email "actions@github.com"
        

         # کپی کردن فایل‌های جدید به مسیر جدید
         mkdir -p existing_repo/zcrepo/aarch64
         sudo find /tmp -name "*.pkg.tar.zst" -exec cp -f {} existing_repo/zcrepo/aarch64/ \; 

         # حذف فایل‌های قدیمی دیتابیس
         cd existing_repo/zcrepo/aarch64
         rm -f zc-repo.db* zc-repo.files*
         
         # ایجاد دیتابیس جدید
         repo-add zc-repo.db.tar.gz *.pkg.tar.zst

         # تغییر نام فایل‌های دیتابیس به فرمت مورد نیاز
         mv zc-repo.files.tar.gz zc-repo.files
         mv zc-repo.db.tar.gz zc-repo.db

         # کامیت و push تغییرات
         cd ../../
         git add .
         git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')"
         git push origin main

         # تأیید آپلود
         echo "Repository successfully synced!"
         echo "Access at: https://codeberg.org/zenoralinux/zc-repo/tree/main/zcrepo/aarch64"
