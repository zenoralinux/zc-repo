name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 به وقت UTC

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
    # مرحله 0: فعال‌سازی شبیه‌سازی QEMU برای ARM64
    - name: Enable QEMU for aarch64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # مرحله 1: دریافت مخزن
    - name: Checkout repository
      uses: actions/checkout@v4

    # مرحله 2: اجرای کانتینر Arch Linux ARM با QEMU
    - name: Run ARM64 build in container
      uses: addnab/docker-run-action@v3
      with:
        image: archlinux:base-devel
        options: --platform linux/arm64
        shell: bash
        run: |
          # نصب ابزارهای مورد نیاز
          pacman -Sy --noconfirm git base-devel sudo wget

          # ساخت کاربر builder
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

          # نصب yay
          sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
          cd /tmp/yay
          sudo -u builder makepkg -si --noconfirm --skippgpcheck
          rm -rf /tmp/yay

          # ساخت بسته‌ها در پوشه /tmp/aarch64
          mkdir -p /tmp/aarch64
          cd /home/builder

          packages=(
            carburetor
            bottles
            Packet
            google-chrome
            ascii-draw
            protonup-qt-bin
            hiddify-app-bin
            oblivion-desktop-bin
            heroic-games-launcher-bin
            brisk-bin
            microsoft-edge-stable-bin
            gopeed-bin
            materialgram-bin
            brave-bin
            edex-ui-bin
          )

          for pkg in "${packages[@]}"; do
            sudo -u builder yay -S --noconfirm --mflags="--skippgpcheck" --builddir=/tmp/aarch64 "$pkg"
          done

    # مرحله 3: sync مخزن AARCH64
    - name: Sync to Codeberg (aarch64)
      env:
        CODEBERG_USER: zenoralinux
        CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
      run: |
        # پاکسازی توکن
        CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')

        # تنظیمات Git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

        # کلون کردن مخزن
        git clone "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git" existing_repo || \
          { mkdir -p existing_repo/zcrepo/aarch64; cd existing_repo; git init; }

        # کپی بسته‌ها به مسیر aarch64
        mkdir -p existing_repo/zcrepo/aarch64
        find /tmp/aarch64 -name "*.pkg.tar.zst" -exec cp -f {} existing_repo/zcrepo/aarch64/ \;

        # ساخت دیتابیس
        cd existing_repo/zcrepo/aarch64
        rm -f zc-repo.db* zc-repo.files*
        repo-add zc-repo.db.tar.gz *.pkg.tar.zst
        mv zc-repo.files.tar.gz zc-repo.files
        mv zc-repo.db.tar.gz zc-repo.db

        # push تغییرات
        cd ../../
        git add .
        git commit -m "ARM64 repo update: $(date +'%Y-%m-%d %H:%M:%S')"
        git push origin main
