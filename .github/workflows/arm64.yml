name: Arch Linux ARM64 RootFS Builder for Termux
 
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

jobs:
  build-arm64-rootfs:
    runs-on: ubuntu-latest

    steps:
    # فعال‌سازی QEMU برای پشتیبانی از ARM64
    - name: Enable QEMU for ARM64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    # دریافت سورس مخزن
    - name: Checkout repository
      uses: actions/checkout@v4

    # ساخت rootfs در کانتینر ARM64
    - name: Build ARM64 RootFS
      uses: addnab/docker-run-action@v3
      with:
        image: ghcr.io/fwcd/archlinux:latest
        options: --platform linux/arm64 -v $(pwd):/output
        shell: bash
        run: |
          set -e
          
          # نصب پیش‌نیازها
          pacman -Syu --noconfirm --needed arch-install-scripts pacman-contrib qemu-user-static-binfmt

          # ایجاد دایرکتوری rootfs
          ROOTFS_DIR="/tmp/arch-rootfs"
          mkdir -p "$ROOTFS_DIR"

          # پایه‌سازی سیستم
          pacstrap -C /etc/pacman.conf -c -G -M "$ROOTFS_DIR" base base-devel

          # تنظیمات پایه برای ترمیکس
          echo "[general]
          arch = aarch64
          fileSystemType = ext4
          " > "$ROOTFS_DIR/termux.properties"

          # تنظیمات pacman برای rootfs
          echo "[options]
          Architecture = aarch64
          Color
          CheckSpace
          SigLevel = Never
          ParallelDownloads = 5
          " > "$ROOTFS_DIR/etc/pacman.conf"

          # تنظیمات لوکال
          echo "LANG=en_US.UTF-8" > "$ROOTFS_DIR/etc/locale.conf"
          echo "en_US.UTF-8 UTF-8" >> "$ROOTFS_DIR/etc/locale.gen"
          chroot "$ROOTFS_DIR" locale-gen

          # نصب بسته‌های ضروری برای ترمیکس
          chroot "$ROOTFS_DIR" pacman -Syu --noconfirm --needed \
            sudo bash-completion vim nano git wget curl openssh \
            python python-pip nodejs npm ruby rust go \
            clang cmake make gcc pkg-config \
            termux-exec termux-tools proot-distro

          # ایجاد کاربر معمولی
          chroot "$ROOTFS_DIR" useradd -m -G wheel -s /bin/bash termux
          echo "%wheel ALL=(ALL) ALL" >> "$ROOTFS_DIR/etc/sudoers"

          # فشرده‌سازی rootfs
          cd "$ROOTFS_DIR"
          tar -czvf /output/archlinux-arm64-rootfs.tar.gz .

    # آپلود rootfs به عنوان آرتیفکت
    - name: Upload RootFS artifact
      uses: actions/upload-artifact@v3
      with:
        name: archlinux-arm64-rootfs
        path: archlinux-arm64-rootfs.tar.gz
