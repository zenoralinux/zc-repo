name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
    # مرحله 0: فعال‌سازی QEMU برای پشتیبانی از ARM64
    - name: Enable QEMU for aarch64
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all

    # مرحله 1: دریافت سورس مخزن
    - name: Checkout repository
      uses: actions/checkout@v4

    # مرحله 2: ساخت بسته‌ها در کانتینر ARM64 با pacman-contrib
    - name: Build ARM64 packages in container
      uses: addnab/docker-run-action@v3
      with:
        image: ghcr.io/fwcd/archlinux:latest
        options: --platform linux/arm64
        shell: bash
        run: |
          set -e

          echo "🔧 Updating base system..."
          pacman -Sy --noconfirm --needed
          pacman -S --noconfirm --needed git base-devel pacman-contrib gnupg binutils curl fakeroot

          echo "👤 Creating builder user..."
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

          echo "🚀 Installing yay AUR helper..."
          sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
          cd /tmp/yay
          sudo -u builder makepkg -si --noconfirm --skippgpcheck

          echo "📦 Packages to build:"
          packages=(
           # carburetor
           # ascii-draw
           # materialgram-bin
           # gopeed-bin
          )

          mkdir -p /output

          for pkg in "${packages[@]}"; do
            echo "➡️ Building $pkg..."
            sudo -u builder yay -S --noconfirm --mflags="--skippgpcheck --nocheck" --builddir=/tmp "$pkg" || echo "⚠️ Failed to build $pkg"
          done

          echo "📁 Copying packages to /output..."
          find /tmp/yay -name "*.pkg.tar.zst" -exec cp -v {} /output/ \;

    # مرحله 3: سینک با مخزن Codeberg
    - name: Sync built packages to Codeberg repo
      env:
        CODEBERG_USER: zenoralinux
        CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
      run: |
        set -e

        echo "🔑 Cleaning token..."
        CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')

        echo "🔁 Cloning Codeberg repo..."
        git clone "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git" existing_repo
        mkdir -p existing_repo/zcrepo/aarch64

        echo "📦 Copying packages to Codeberg repo..."
        cp -v /home/runner/work/zenora-repo/zenora-repo/output/*.pkg.tar.zst existing_repo/zcrepo/aarch64/

        cd existing_repo/zcrepo/aarch64

        echo "🧹 Cleaning old database files..."
        rm -f zc-repo.db* zc-repo.files*

        echo "🧱 Rebuilding repo database..."
        repo-add zc-repo.db.tar.gz *.pkg.tar.zst

        mv -f zc-repo.db.tar.gz zc-repo.db
        mv -f zc-repo.files.tar.gz zc-repo.files

        echo "🔧 Git config & commit..."
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        cd ../../
        git add .
        git commit -m "🆕 Automated update: $(date +'%Y-%m-%d %H:%M:%S')" || echo "ℹ️ Nothing to commit"
        git push origin main

        echo "✅ Repository synced successfully!"
        echo "🌐 View: https://codeberg.org/${CODEBERG_USER}/zc-repo/tree/main/zcrepo/aarch64"
