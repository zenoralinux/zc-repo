name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
    # مرحله 0: فعال‌سازی QEMU برای پشتیبانی از معماری ARM64
      - name: Enable QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

    # مرحله 1: دریافت سورس مخزن اصلی GitHub
      - name: Checkout repository
        uses: actions/checkout@v4

    # مرحله 2: ساخت بسته‌های AUR در کانتینر ARM64 با QEMU
      - name: Build ARM64 packages in container
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64 -v ${{ github.workspace }}:/workspace
          shell: bash
          run: |
           # مرحله 1: تنظیم محیط ساخت
           pacman -Rdd --noconfirm systemd-sysvcompat || true
           pacman -Syu --noconfirm --needed 
           pacman -S --noconfirm --needed git base-devel pacman-contrib gnupg binutils curl

           # مرحله 3: نصب yay
           useradd -m builder
           echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
           sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
           cd /tmp/yay
           sudo -u builder makepkg -si --noconfirm --skippgpcheck
           rm -rf /tmp/yay

            # Build packages
            packages=(
              carburetor
              ascii-draw
              materialgram-bin
              gopeed-bin
            )

            # Create artifacts directory in workspace
            mkdir -p /workspace/artifacts

            for pkg in "${packages[@]}"; do
              echo "➡️ Building $pkg..."
              sudo -u builder yay -S --noconfirm --mflags="--skippgpcheck" --builddir=/tmp "$pkg" && \
                find /tmp -name "*.pkg.tar.zst" -exec cp {} /workspace/artifacts/ \; || \
                echo "⚠️ Failed to build $pkg"
            done

     # مرحله 3: ذخیره سازی بسته‌های ساخته شده
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: arm64-packages
          path: ${{ github.workspace }}/artifacts/*.pkg.tar.zst
          retention-days: 1
          if-no-files-found: error

  prepare-repo:
    needs: build-arm64
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: arm64-packages
          path: packages

      # مرحله 4: آماده‌سازی مخزن در x86_64
      - name: Prepare repository on x86_64
        uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          shell: bash
          run: |
            # نصب ابزارهای لازم
            pacman -Syu --noconfirm --needed pacman-contrib git
            
            # ایجاد ساختار دایرکتوری
            mkdir -p /github/workspace/repo/aarch64
            
            # کپی بسته‌ها
            cp -f /github/workspace/packages/*.pkg.tar.zst /github/workspace/repo/aarch64/
            
            # ایجاد دیتابیس مخزن
            cd /github/workspace/repo/aarch64
            repo-add zc-repo.db.tar.gz *.pkg.tar.zst
            
            # تغییر نام فایل‌های دیتابیس
            mv zc-repo.files.tar.gz zc-repo.files
            mv zc-repo.db.tar.gz zc-repo.db

      # مرحله 5: سینک مخزن
      - name: Sync Repository
        env:
          CODEBERG_USER: zenoralinux
          CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
        run: |
          # تنظیمات Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # اضافه کردن تغییرات
          git add repo/
          git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')"
          
          # Push تغییرات
          git remote set-url origin "https://${CODEBERG_USER}:${CODEBERG_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git"
          git push origin main
          
          echo "Repository successfully synced!"
          echo "Access at: https://codeberg.org/zenoralinux/zc-repo/tree/main/repo/aarch64"
