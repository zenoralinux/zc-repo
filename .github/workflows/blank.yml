name: Arch Linux Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # Runs daily

jobs:
  build-repo:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Setup build environment
    - name: Setup build environment
      run: |
        # Remove systemd-sysvcompat to avoid version conflicts
        pacman -Rdd --noconfirm systemd-sysvcompat || true
        
        # Install base packages
        pacman -Sy --noconfirm --needed git base-devel
        pacman -S --noconfirm --needed \
          hicolor-icon-theme libayatana-appindicator at-spi2-core \
          fontconfig pango gtk3 ayatana-ido gdk-pixbuf2 \
          libayatana-indicator libdbusmenu-glib cairo harfbuzz libepoxy \
          python python-gobject python-pycountry gtk4 libadwaita meson \
          cmake ninja qt6-base qt6-wayland vulkan-headers libdrm libxcb \
          polkit

    # Step 3: Create builder user and install yay
    - name: Install yay as builder user
      run: |
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        
        sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
        cd /tmp/yay
        sudo -u builder makepkg -si --noconfirm --skippgpcheck
        rm -rf /tmp/yay

    # Step 4: Build AUR packages with yay
    - name: Build AUR packages with yay
      run: |
        cd "$GITHUB_WORKSPACE"
        # Build hiddify-app-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" hiddify-app-bin
        
        # Build carburetor
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" carburetor
        
        # Build lact-git
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" lact-git
        
        # Build oblivion-desktop-bin (may be excluded due to size)
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" oblivion-desktop-bin

    # Step 5: Prepare repository structure with size filtering
    - name: Prepare repository structure with size filter
      run: |
        mkdir -p "$GITHUB_WORKSPACE/repo/x86_64"
        # Move only packages smaller than 100MB
        find /tmp -name "*.pkg.tar.zst" -size -100M -exec mv {} "$GITHUB_WORKSPACE/repo/x86_64/" \;
        
        # Report transferred packages
        echo "Transferred packages:"
        ls -lh "$GITHUB_WORKSPACE/repo/x86_64/" || echo "No packages transferred"
        
        echo "Excluded packages (over 100MB):"
        find /tmp -name "*.pkg.tar.zst" -size +100M -exec ls -lh {} + || echo "No large packages found"
        
        # Create repository database
        cd "$GITHUB_WORKSPACE/repo/x86_64"
        if [ -n "$(ls -A .)" ]; then
          repo-add zc-repo.db.tar.gz *.pkg.tar.zst
          echo "Repository successfully created"
        else
          echo "Warning: Repository is empty!"
        fi

    # Step 6: Deploy to repository branch
    - name: Deploy to repository branch
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.UPLOAD_ZENORA }}
        publish_dir: ./repo
        destination_dir: .
        publish_branch: repo
        keep_files: false
        force_orphan: true
