name: zenora Linux Repository Builder
 
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'  # روزانه اجرا شود

jobs:
  build-repo:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
    # مرحله 1: دریافت مخزن
    - name: Checkout repository
      uses: actions/checkout@v4

    # مرحله 2: تنظیم محیط ساخت
    - name: Setup build environment
      run: |
        pacman -Rdd --noconfirm systemd-sysvcompat || true
        pacman -Sy --noconfirm --needed git base-devel
        pacman -S --noconfirm --needed \
          hicolor-icon-theme libayatana-appindicator at-spi2-core \
          fontconfig pango gtk3 ayatana-ido gdk-pixbuf2 \
          libayatana-indicator libdbusmenu-glib cairo harfbuzz libepoxy \
          python python-gobject python-pycountry gtk4 libadwaita meson \
          cmake ninja qt6-base qt6-wayland vulkan-headers libdrm libxcb \
          polkit nodejs npm

    # مرحله 3: نصب yay
    - name: Install yay as builder user
      run: |
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
        cd /tmp/yay
        sudo -u builder makepkg -si --noconfirm --skippgpcheck
        rm -rf /tmp/yay

    # مرحله 4: ساخت بسته‌های AUR
    - name: Build AUR packages with yay
      run: |
        cd "$GITHUB_WORKSPACE"
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" carburetor
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" bottles
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" Packet
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" google-chrome
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" ascii-draw
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" protonup-qt-bin 
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" hiddify-app-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" oblivion-desktop-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" heroic-games-launcher-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" brisk-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" microsoft-edge-stable-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" gopeed-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" materialgram-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" brave-bin
        sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" edex-ui-bin



    # مرحله 5: آماده‌سازی و سینک مخزن
    - name: Prepare and Sync Repository
      env:
        CODEBERG_USER: zenoralinux
        CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
      run: |
        # پاکسازی توکن
        CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')
        
        # تنظیمات Git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # کلون کردن مخزن موجود
        cd "$GITHUB_WORKSPACE"
        git clone "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git" existing_repo || \
          { mkdir -p existing_repo/x86_64; cd existing_repo; git init; }
        
        # کپی کردن فایل‌های جدید به مخزن موجود
        mkdir -p existing_repo/x86_64
        find /tmp -name "*.pkg.tar.zst" -exec cp -f {} existing_repo/x86_64/ \;
        
        # حذف فایل‌های قدیمی دیتابیس
        cd existing_repo/x86_64
        rm -f zc-repo.db* zc-repo.files*
        
        # ایجاد دیتابیس جدید با تمام بسته‌ها (قدیمی و جدید)
        repo-add zc-repo.db.tar.gz *.pkg.tar.zst
        
        # تغییر نام فایل‌های دیتابیس به فرمت مورد نظر
        mv zc-repo.files.tar.gz zc-repo.files
        mv zc-repo.db.tar.gz zc-repo.db
        
        # کامیت و push تغییرات
        cd ..
        git add .
        git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')"
        git push origin main
        
        # تأیید آپلود
        echo "Repository successfully synced!"
        echo "Access at: https://codeberg.org/zenoralinux/zc-repo"
