name: zenora ARM64 and X86_64 AUR zc-repo Repository Builder

on: 
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Enable QEMU for aarch64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ARM64 pkgs
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64 --privileged -v ${{ github.workspace }}:/output
          shell: bash
          run: |
            set -eux
            pacman -Syu --noconfirm
            pacman -S --noconfirm sudo git base-devel wget archlinux-keyring cmake zsh pacman-contrib

            wget https://repo.archlinuxcn.org/aarch64/paru-git-2.0.4.r63.g5bca838-1-aarch64.pkg.tar.zst
            pacman -U ./paru-git-2.0.4.r63.g5bca838-1-aarch64.pkg.tar.zst --noconfirm
            
            useradd -m builder
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
            su - builder -c '
              paru --noconfirm --mflags="--skippgpcheck" --clonedir /tmp -S zsh-theme-powerlevel10k
            '

            mkdir -p /output/packages
            find /tmp -name "*.pkg.tar.*" -exec cp -v {} /output/packages/ \;

      - name: Build X86_64 pkgs
        uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          options: -v ${{ github.workspace }}:/workspace
          shell: bash
          run: |
            pacman -Rdd --noconfirm systemd-sysvcompat || true
            pacman -Sy --noconfirm --needed git base-devel
            pacman -S --noconfirm --needed \
            hicolor-icon-theme libayatana-appindicator at-spi2-core \
            fontconfig pango gtk3 ayatana-ido gdk-pixbuf2 \
            libayatana-indicator libdbusmenu-glib cairo harfbuzz libepoxy \
            python python-gobject python-pycountry gtk4 libadwaita meson \
            cmake ninja qt6-base qt6-wayland vulkan-headers libdrm libxcb \
            polkit nodejs npm wget \
            qt6-webengine yaml-cpp networkmanager upower \
            kconfig ki18n kservice kwidgetsaddons kpmcore \
            squashfs-tools rsync boost pybind11 doxygen \
            dmidecode gptfdisk hwinfo kparts polkit-qt6 \
            solid qt6-tools libpwquality 

    # مرحله 3: نصب yay
      - name: Install yay as builder user
        run: |
         useradd -m builder
         echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
         sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
         cd /tmp/yay
         sudo -u builder makepkg -si --noconfirm --skippgpcheck
         rm -rf /tmp/yay

    # مرحله 4: ساخت بسته‌های AUR
      - name: Build AUR packages with yay
        run: |

         cd "$GITHUB_WORKSPACE"
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" carburetor
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" bottles
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" Packet
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" google-chrome
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" ascii-draw
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" protonup-qt-bin 
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" hiddify-app-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" oblivion-desktop-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" heroic-games-launcher-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" brisk-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" microsoft-edge-stable-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" gopeed-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" materialgram-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" brave-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" edex-ui-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" zen-browser-bin
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" ttf-meslo-nerd-font-powerlevel10k
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" zsh-theme-powerlevel10k

         # ساخت بسته calamares
         sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" ckbcomp
         sudo -u builder git clone https://github.com/zenoralinux/calamares.git /tmp/calamares
         cd /tmp/calamares
         sudo -u builder makepkg -si --noconfirm --skippgpcheck
      - name: Prepare and Sync Repository
        run: |

            set -eux
            pacman -Sy --noconfirm git pacman-contrib

            export CODEBERG_USER="zenoralinux"
            export CLEAN_TOKEN="$(echo "${{ secrets.CODEBERG_TOKEN }}" | tr -d '\n\r\t ')"

            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"

            cd /workspace
            rm -rf existing_repo
            # git clone "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git" existing_repo
            
            # کپی کردن فایل‌های جدید به مسیر جدید 
            mkdir -p existing_repo/zcrepo/aarch64
            find /tmp -name "*.pkg.tar.zst" -exec cp -f {} existing_repo/zcrepo/x86_64/ \;
            mkdir -p existing_repo/zcrepo/aarch64
            find /tmp -name "*aarch64.pkg.tar.zst" -exec cp -f {} existing_repo/zcrepo/aarch64/ \;
            find /tmp -name "*any.pkg.tar.zst" -exec cp -f {} existing_repo/zcrepo/aarch64/ \;
            cp -v /workspace/packages/*.pkg.tar.* existing_repo/zcrepo/aarch64/

            # ساخت دیتا بیس جدید x86_64
            cd existing_repo/zcrepo/x86_64
            rm -f zc-repo.db* zc-repo.files*
            repo-add zc-repo.db.tar.gz *.pkg.tar.zst
            mv zc-repo.files.tar.gz zc-repo.files
            mv zc-repo.db.tar.gz zc-repo.db
            # ساخت دیتا بیس جدید aarch64
            cd ..
            cd ./aarch64
            rm -f zc-repo.db* zc-repo.files*
            repo-add zc-repo.db.tar.gz *.pkg.tar.*
            mv zc-repo.files.tar.gz zc-repo.files
            mv zc-repo.db.tar.gz zc-repo.db

            cd ../../
            git add .
            git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
            git push origin main

            echo "✅ Repository successfully synced!"
