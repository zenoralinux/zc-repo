name: zenora ARM64 and x86_64 AUR zc-repo Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

env:
  CODEBERG_USER: zenoralinux
  CLEAN_TOKEN: ${{ secrets.CODEBERG_TOKEN }}

jobs:

  build-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Enable QEMU for ARM64
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build ARM64 packages
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/fwcd/archlinux:latest
          options: --platform linux/arm64 --privileged -v ${{ github.workspace }}:/output
          shell: bash
          run: |
            set -eux
            pacman -Syu --noconfirm
            pacman -S --noconfirm sudo git base-devel wget cmake zsh pacman-contrib

            wget https://repo.archlinuxcn.org/aarch64/paru-git-2.0.4.r63.g5bca838-1-aarch64.pkg.tar.zst
            pacman -U paru-git-*.pkg.tar.zst --noconfirm

            useradd -m builder
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

            su - builder -c '
              paru --noconfirm --mflags="--skippgpcheck" --clonedir /tmp -S zsh-theme-powerlevel10k
            '

            mkdir -p /output/arm64
            find /tmp -name "*.pkg.tar.*" -exec cp -v {} /output/arm64/ \;

  build-x86_64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build x86_64 packages
        uses: addnab/docker-run-action@v3
        with:
          image: archlinux:latest
          options: --privileged -v ${{ github.workspace }}:/output
          shell: bash
          run: |
            set -eux
            pacman -Sy --noconfirm
            pacman -Rdd --noconfirm systemd-sysvcompat || true
            pacman -S --noconfirm base-devel git sudo wget pacman-contrib

            useradd -m builder
            echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
            sudo -u builder git clone https://aur.archlinux.org/yay.git /home/builder/yay
            cd /home/builder/yay
            sudo -u builder makepkg -si --noconfirm --skippgpcheck
            rm -rf /home/builder/yay

            mkdir -p /output/x86_64

            for pkg in \
              carburetor bottles Packet google-chrome ascii-draw protonup-qt-bin hiddify-app-bin \
              oblivion-desktop-bin heroic-games-launcher-bin brisk-bin microsoft-edge-stable-bin \
              gopeed-bin materialgram-bin brave-bin edex-ui-bin zen-browser-bin \
              ttf-meslo-nerd-font-powerlevel10k zsh-theme-powerlevel10k ckbcomp; do
              sudo -u builder yay -S --noconfirm --builddir=/tmp --mflags="--skippgpcheck" "$pkg"
            done

            cd /home/builder
            sudo -u builder git clone https://github.com/zenoralinux/calamares.git /tmp/calamares
            cd /tmp/calamares
            sudo -u builder makepkg -si --noconfirm --skippgpcheck

            find /tmp -name "*.pkg.tar.*" -exec cp -v {} /output/x86_64/ \;

  sync-repo:
    needs: [build-arm64, build-x86_64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout clean repo
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git clone "https://${{ env.CODEBERG_USER }}:${{ env.CLEAN_TOKEN }}@codeberg.org/${{ env.CODEBERG_USER }}/zc-repo.git" existing_repo

      - name: Sync packages
        run: |
          set -eux
          mkdir -p existing_repo/zcrepo/{x86_64,aarch64}

          # Copy x86_64
          find ./x86_64 -name "*.pkg.tar.zst" -exec cp -fv {} existing_repo/zcrepo/x86_64/ \;

          # Copy aarch64
          find ./arm64 -name "*aarch64.pkg.tar.zst" -exec cp -fv {} existing_repo/zcrepo/aarch64/ \;
          find ./arm64 -name "*any.pkg.tar.zst"     -exec cp -fv {} existing_repo/zcrepo/aarch64/ \;

      - name: Generate repo databases
        run: |
          cd existing_repo/zcrepo/x86_64
          rm -f zc-repo.db* zc-repo.files*
          repo-add zc-repo.db.tar.gz *.pkg.tar.zst || true
          mv zc-repo.db.tar.gz zc-repo.db
          mv zc-repo.files.tar.gz zc-repo.files

          cd ../aarch64
          rm -f zc-repo.db* zc-repo.files*
          repo-add zc-repo.db.tar.gz *.pkg.tar.zst || true
          mv zc-repo.db.tar.gz zc-repo.db
          mv zc-repo.files.tar.gz zc-repo.files

      - name: Commit and push to Codeberg
        run: |
          cd existing_repo
          git add .
          git commit -m "Automated repo update: $(date +'%Y-%m-%d %H:%M:%S')" || echo "No changes"
          git push origin main
