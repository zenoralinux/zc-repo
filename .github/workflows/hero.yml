name: Arch Linux Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-repo:
    runs-on: ubuntu-latest
    container: archlinux:latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup build environment
      run: |
        pacman -Rdd --noconfirm systemd-sysvcompat || true
        pacman -Sy --noconfirm --needed git base-devel
        pacman -S --noconfirm --needed \
          hicolor-icon-theme libayatana-appindicator at-spi2-core \
          fontconfig pango gtk3 ayatana-ido gdk-pixbuf2 \
          libayatana-indicator libdbusmenu-glib cairo harfbuzz libepoxy \
          python python-gobject python-pycountry gtk4 libadwaita meson \
          cmake ninja qt6-base qt6-wayland vulkan-headers libdrm libxcb \
          polkit nodejs npm

        # تنظیمات مخزن archlinuxcn
        echo '[archlinuxcn]' >> /etc/pacman.conf
        echo 'Server = https://repo.archlinuxcn.org/$arch' >> /etc/pacman.conf
        echo 'SigLevel = Optional TrustAll' >> /etc/pacman.conf  # غیرفعال کردن بررسی امضا
        
        pacman -Sy --noconfirm archlinuxcn-keyring
        pacman-key --init
        pacman-key --populate archlinux archlinuxcn
        pacman-key --refresh-keys

    - name: Install heroic-games-launcher-bin
      run: |
        pacman -S --noconfirm heroic-games-launcher-bin --overwrite='*'

    - name: Install yay as builder user
      run: |
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        sudo -u builder git clone https://aur.archlinux.org/yay.git /tmp/yay
        cd /tmp/yay
        sudo -u builder makepkg -si --noconfirm --skippgpcheck
        rm -rf /tmp/yay

    - name: Build AUR packages with yay
      run: |
        cd "$GITHUB_WORKSPACE"


    - name: Prepare repository structure
      run: |
        mkdir -p "$GITHUB_WORKSPACE/repo/x86_64"
        find /tmp -name "*.pkg.tar.zst" -exec mv {} "$GITHUB_WORKSPACE/repo/x86_64/" \;
        mv /var/cache/pacman/pkg/heroic-games-launcher-bin*.pkg.tar.zst "$GITHUB_WORKSPACE/repo/x86_64/" || true
        
        cd "$GITHUB_WORKSPACE/repo/x86_64"
        repo-add zc-repo.db.tar.gz *.pkg.tar.zst
        mv zc-repo.files.tar.gz zc-repo.files
        mv zc-repo.db.tar.gz zc-repo.db

    - name: Configure and Push to Codeberg
      env:
        CODEBERG_USER: zenoralinux
        CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
      run: |
        CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git config --global init.defaultBranch main
        
        cd "$GITHUB_WORKSPACE/repo"
        git init -b main
        git add .
        git commit -m "Automated update: $(date +'%Y-%m-%d %H:%M:%S')"
        
        git remote add origin "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git"
        git push -u origin main --force
        
        echo "Repository successfully updated!"
        echo "Access at: https://codeberg.org/zenoralinux/zc-repo"
