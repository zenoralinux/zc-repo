name: zenora ARM64 AUR Repository Builder

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'  # اجرای روزانه ساعت 03:00 UTC

jobs:
  build-arm64:
    runs-on: ubuntu-latest

    steps:
    # مرحله 1: دریافت سورس مخزن
    - name: Checkout repository
      uses: actions/checkout@v4

    # مرحله 2: آماده‌سازی محیط و ساخت بسته‌ها
    - name: Build compatible ARM64 packages
      uses: addnab/docker-run-action@v3
      with:
        image: archlinux:latest
        shell: bash
        run: |
          set -e

          echo "🔧 Updating base system..."
          pacman -Sy --noconfirm --needed
          pacman -S --noconfirm --needed git base-devel pacman-contrib gnupg binutils curl fakeroot

          echo "👤 Creating builder user..."
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

          echo "🚀 Cloning existing repository..."
          git clone https://codeberg.org/zenoralinux/zc-repo.git existing_repo
          mkdir -p /output

          echo "📦 Processing x86_64 packages..."
          cd existing_repo/zcrepo/x86_64
          
          # لیست بسته‌های x86_64 موجود
          packages=$(ls *.pkg.tar.zst | sed 's/-x86_64.pkg.tar.zst//' | sed 's/-any.pkg.tar.zst//' | sort -u)

          for pkg in $packages; do
            echo "➡️ Processing $pkg..."
            
            # دانلود PKGBUILD از AUR
            if sudo -u builder git clone https://aur.archlinux.org/${pkg}.git /tmp/${pkg}; then
              cd /tmp/${pkg}
              
              # بررسی معماری بسته در PKGBUILD
              arch_specific=$(grep -E 'arch=.*\(|arch=' PKGBUILD | grep -v 'any')
              
              if [[ $arch_specific == *"aarch64"* ]] || grep -q 'arch=("any")' PKGBUILD; then
                echo "✅ Compatible package (any/aarch64), building..."
                sudo -u builder makepkg --noconfirm --skippgpcheck --nocheck -s
                
                # کپی فقط بسته‌های any و aarch64
                find . -name "*-any.pkg.tar.zst" -exec cp -v {} /output/ \;
                find . -name "*-aarch64.pkg.tar.zst" -exec cp -v {} /output/ \;
              else
                echo "⏩ Skipping x86_64-only package: $pkg"
              fi
              
              cd -
            else
              echo "⚠️ Package $pkg not found in AUR, skipping..."
            fi
          done

    # مرحله 3: سینک با مخزن Codeberg
    - name: Sync built packages to Codeberg repo
      env:
        CODEBERG_USER: zenoralinux
        CODEBERG_TOKEN: ${{ secrets.CODEBERG_TOKEN }}
      run: |
        set -e

        echo "🔑 Cleaning token..."
        CLEAN_TOKEN=$(echo "$CODEBERG_TOKEN" | tr -d '\n\r\t ')

        echo "🔁 Cloning Codeberg repo..."
        git clone "https://${CODEBERG_USER}:${CLEAN_TOKEN}@codeberg.org/${CODEBERG_USER}/zc-repo.git" existing_repo
        mkdir -p existing_repo/zcrepo/aarch64

        echo "📦 Copying compatible packages to Codeberg repo..."
        cp -v /home/runner/work/zenora-repo/zenora-repo/output/*.pkg.tar.zst existing_repo/zcrepo/aarch64/

        cd existing_repo/zcrepo/aarch64

        echo "🧹 Cleaning old database files..."
        rm -f zc-repo.db* zc-repo.files*

        echo "🧱 Rebuilding repo database..."
        repo-add zc-repo.db.tar.gz *.pkg.tar.zst

        mv -f zc-repo.db.tar.gz zc-repo.db
        mv -f zc-repo.files.tar.gz zc-repo.files

        echo "🔧 Git config & commit..."
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        cd ../../
        git add .
        git commit -m "🆕 Automated ARM64 update (any/aarch64): $(date +'%Y-%m-%d %H:%M:%S')" || echo "ℹ️ Nothing to commit"
        git push origin main

        echo "✅ Repository synced successfully!"
        echo "🌐 View: https://codeberg.org/${CODEBERG_USER}/zc-repo/tree/main/zcrepo/aarch64"
